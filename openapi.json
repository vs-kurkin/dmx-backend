{
  "openapi": "3.0.0",
  "paths": {
    "/sse": {
      "get": {
        "operationId": "ServerEventsController_sse",
        "summary": "Establish SSE connection for server events",
        "parameters": [],
        "responses": {
          "200": {
            "description": "SSE stream"
          }
        },
        "tags": [
          "SSE"
        ],
        "security": [
          {
            "bearer": []
          }
        ]
      }
    },
    "/serial": {
      "get": {
        "operationId": "SerialController_getList",
        "summary": "Returns serial ports info",
        "description": "Retrieve a list of serial port info objects",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Port info list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Serial"
        ]
      },
      "delete": {
        "operationId": "SerialController_dropSerial",
        "summary": "Deletes all serial ports and universes",
        "description": "Delete all serial ports and associated universes",
        "parameters": [],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "Serial"
        ]
      },
      "post": {
        "operationId": "SerialController_addSerial",
        "summary": "Adds a new serial port and associated universe",
        "description": "Create a new serial port and associated universe",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Serial options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "tags": [
          "Serial"
        ]
      }
    },
    "/serial/{id}": {
      "delete": {
        "operationId": "SerialController_deleteSerial",
        "summary": "Deletes a serial port and its associated universe",
        "description": "Delete a serial port and associated universe by ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "The ID of the serial port",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Serial"
        ]
      }
    },
    "/serial/current": {
      "get": {
        "operationId": "SerialController_getCurrent",
        "summary": "Returns the ID of the current serial port",
        "description": "Retrieve the ID of the current serial port",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Current serial port ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Serial"
        ]
      },
      "post": {
        "operationId": "SerialController_setCurrent",
        "summary": "Set Current Serial Port",
        "description": "Set the current serial port by ID",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "The ID of the serial port to set as current",
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "tags": [
          "Serial"
        ]
      }
    },
    "/serial/drivers": {
      "get": {
        "operationId": "SerialController_getDrivers",
        "summary": "Returns supported driver list",
        "description": "Retrieve a list of supported serial drivers",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Driver list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "Serial"
        ]
      }
    },
    "/dmx": {
      "get": {
        "operationId": "DMXController_getUniverses",
        "summary": "Returns universes list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Universes id list",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": [
          "DMX"
        ]
      },
      "delete": {
        "operationId": "DMXController_deleteAllUniverses",
        "summary": "Delete all universes",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "DMX"
        ]
      },
      "post": {
        "operationId": "DMXController_addUniverse",
        "summary": "Add universe",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Universe options",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "DMX"
        ]
      }
    },
    "/dmx/{id}": {
      "delete": {
        "operationId": "DMXController_deleteUniverse",
        "summary": "Delete universe",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Universe id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "DMX"
        ]
      }
    },
    "/dmx/{id}/values": {
      "get": {
        "operationId": "DMXController_getValues",
        "summary": "Get DMX values",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Universe id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Array of DMX values",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array"
                }
              }
            }
          }
        },
        "tags": [
          "DMX"
        ]
      }
    },
    "/dmx/{id}/values/{value}": {
      "patch": {
        "operationId": "DMXController_setValues",
        "summary": "Set DMX values",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Universe id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "value",
            "required": true,
            "in": "path",
            "description": "New DMX channels value",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "DMX"
        ]
      }
    },
    "/dmx/{id}/channel": {
      "patch": {
        "operationId": "DMXController_setChannel",
        "summary": "Sets several DMX channels",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Universe id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "New DMX values",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "DMX"
        ]
      }
    },
    "/dmx/{id}/channel/{address}": {
      "get": {
        "operationId": "DMXController_getChannelValue",
        "summary": "Get DMX channel value",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Universe id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "required": true,
            "in": "path",
            "description": "DMX channel address",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "DMX channel value",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            }
          }
        },
        "tags": [
          "DMX"
        ]
      }
    },
    "/dmx/{id}/channel/{address}/value/{value}": {
      "patch": {
        "operationId": "DMXController_setChannelValue",
        "summary": "Set DMX channel value",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "description": "Universe id",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "address",
            "required": true,
            "in": "path",
            "description": "DMX channel address",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "value",
            "required": true,
            "in": "path",
            "description": "DMX channel value",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "DMX"
        ]
      }
    },
    "/device": {
      "get": {
        "operationId": "DeviceController_getDevices",
        "summary": "Returns device list",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Map {index: device}",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": [
          "Device"
        ]
      },
      "delete": {
        "operationId": "DeviceController_removeAll",
        "summary": "Delete all devices",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Device"
        ]
      },
      "post": {
        "operationId": "DeviceController_add",
        "summary": "Add new device",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Device object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "DMX address of device",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            }
          }
        },
        "tags": [
          "Device"
        ]
      },
      "patch": {
        "operationId": "DeviceController_set",
        "summary": "Set bulk devices",
        "parameters": [],
        "requestBody": {
          "required": true,
          "description": "Device list",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Object"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "Device"
        ]
      }
    },
    "/device/{index}": {
      "get": {
        "operationId": "DeviceController_get",
        "summary": "Get device",
        "parameters": [
          {
            "name": "index",
            "required": true,
            "in": "path",
            "description": "Device index",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Device object",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": [
          "Device"
        ]
      },
      "patch": {
        "operationId": "DeviceController_update",
        "summary": "Update device",
        "parameters": [
          {
            "name": "index",
            "required": true,
            "in": "path",
            "description": "Device index",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "description": "Device object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Device"
        ]
      },
      "delete": {
        "operationId": "DeviceController_remove",
        "summary": "Delete device",
        "parameters": [
          {
            "name": "index",
            "required": true,
            "in": "path",
            "description": "Device index",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Device"
        ]
      }
    },
    "/device/dmx/{index}": {
      "get": {
        "operationId": "DeviceController_getDMXChannel",
        "summary": "Get DMX channel",
        "parameters": [
          {
            "name": "index",
            "required": true,
            "in": "path",
            "description": "Device index",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "Device"
        ]
      }
    }
  },
  "info": {
    "title": "@dmx-cloud/dmx-backend",
    "description": "",
    "version": "0.0.1",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "Object": {
        "type": "object",
        "properties": {}
      }
    }
  }
}